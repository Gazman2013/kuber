 1  echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
2  sudo apt-get update && sudo apt-get install google-cloud-sdk
3  gcloud --version
4  curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
5  echo   "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
6  apt-get update
7  apt-get install docker-ce docker-ce-cli containerd.io
8  docker --version
9  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
10  apt-get update
11  apt-get install docker-ce docker-ce-cli containerd.io
12  docker --version
13 apt-cache search kubectl
14  apt install kubectl
gcloud init
31  gcloud services enable container.googleapis.com
32  git clone https://github.com/GoogleCloudPlatform/kubernetes-engine-samples
export PROJECT_ID=tokyo-portal-304417
37  echo $PROJECT_ID
39  cd kubernetes-engine-samples/
42  cd hello-app
43  ls
44  cat Dockerfile
49  docker build -t gcr.io/${PROJECT_ID}/hello-app:v1 .
50  docker ps
51  docker images
52 docker run --rm -p 8080:8080 gcr.io/tokyo-portal-304417/hello-app:v1
54  docker ps
55  docker push gcr.io/tokyo-portal-304417/hello-app:v1
56  gcloud auth configure-docker
57  docker push gcr.io/tokyo-portal-304417/hello-app:v1
gcloud config set project $PROJECT_ID
60  gcloud auth list
61  gcloud projects list
62  gcloud compute zone list
63  gcloud compute zones list
64  gcloud config set compute/zone europe-north1-a
66  gcloud container clusters create hello-cluster
67 gcloud compute instances list
69  docker images
70  kubectl create deployment hello-app --image=gcr.io/tokyo-portal-304417/hello-app:v1
73  kubectl scale deployment hello-app --replicas=3
75  kube autoscale deployment hello-app --cpu-percent=80 --min=1 --max=5
76  kubectl autoscale deployment hello-app --cpu-percent=80 --min=1 --max=5
77  kubectl get pods
78  kubectl expose deployment hello-app --name=hello-app-service --type=LoadBalancer --port 8- --target-port 8080
79  kubectl expose deployment hello-app --name=hello-app-service --type=LoadBalancer --port 80 --target-port 8080
80  kubectl get service
81  dcoker images
82  docker images
83  docker build -t gcr.io/tokyo-portal-304417/hello-app:v2 .
84  docker images
85  dcoker push gcr.io/tokyo-portal-304417/hello-app:v2
86  docker push gcr.io/tokyo-portal-304417/hello-app:v2
87  kubectl set image deployment/hello-app hello-app=gcr.io/tokyo-portal-304417/hello-app:v2
88  watch kubectl get pods
89  kubectl delete service hello-app-service
90  gcloud container clusters delete hello-cluster
